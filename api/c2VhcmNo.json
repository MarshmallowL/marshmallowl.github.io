[{"title":"2021","date":"2021-01-03T05:28:32.000Z","date_formatted":{"ll":"Jan 3, 2021","L":"01/03/2021","MM-DD":"01-03"},"updated":"2021-01-05T00:28:59.355Z","content":"2021记录\n看过的书\n\nJava编程的逻辑 //TODO\nspringCloud官方文档//ING\n\nvideos\n\n《全员恶玉》 ——bilibili\n《大江大河2》 //ING\n《咒术回战》ING\n\n新入手产品\n\nKeydous NJ68机械键盘\n\n打卡\n技能\n","plink":"https://marshmallowl.github.io/2021/01/03/2021/2021/"},{"title":"SQL执行计划","date":"2020-12-10T14:07:31.000Z","date_formatted":{"ll":"Dec 10, 2020","L":"12/10/2020","MM-DD":"12-10"},"updated":"2020-12-13T14:45:06.254Z","content":"解释计划\nTODO\n执行计划\n当一条SQL语句执行时会生成该语句的实际执行计划，在语句被硬解析后，所选执行计划会被存到库高速缓存方便下次使用。\n查看最近生成的SQL语句\n12345678-- SCOTT替换成实际用户名SELECT /* recentsql */ sql_id,child_number,hash_value,address,executions,sql_textFROM v$sqlWHERE parsing_user_id = (        SELECT user_id FROM all_users        WHERE username = &#x27;SCOTT&#x27;)    AND command_type IN (2,3,6,7,189)    AND upper(sql_text) NOT LIKE upper(&#x27;%recentsql%&#x27;);\n查看相关执行计划\n在sqlplus下查看\n123456-- sql加上/*+ gather_plan_statistics */注释select /*+ gather_plan_statistics */ empno,ename from emp where ename = &#x27;KING&#x27;;-- 关闭SERVEROUTPUTset serveroutput off-- 查看执行计划select * from table(dbms_xplan.display_cursor(null,null,&#x27;ALLSTATS LAST&#x27;));\n结果如下表：\u0014\n\n\nId\nOperation\nName\nStarts\nE-Rows\nA-Rows\nA-Time\nBuffers\nReads\n\n\n\n\n0\nSELECT STATEMENT\n\n1\n\n1\n00:00:00.01\n8\n6\n\n\n1\nTABLE ACCESS FULL\nEMP\n1\n1\n1\n00:00:00.01\n8\n6\n\n\n各个表头的含义：\n\nA-Rows:返回多少行\nBuffers:发生了多少次一致性读取\nReads:发生了多少次物理读取\nStarts:每一步骤执行的次数\n\n标识SQL语句以便后续取回计划\n\n通过注释标识SQL\n\n1SELECT /* KM-EMPTEST */ /*+ gather_plan_statistics */ empno,ename FROM emp WHERE job = &#x27;MANAGER&#x27;;\n\n使用如下脚本为任何SQL语句取出执行计划\n\n123456789101112131415SELECT    xplan.*FROM    (        SELECT            MAX(sql_id) KEEP(DENSE_RANK LAST ORDER BY last_active_time) sql_id,            MAX(child_number) KEEP(DENSE_RANK LAST ORDER BY last_active_time) child_number        FROM            v$sql        WHERE            upper(sql_text) LIKE &#x27;%&amp;1%&#x27;            AND upper(sql_text) NOT LIKE &#x27;%FROM V$SQL WHERE UPPER(SQL_TEXT) LIKE%&#x27;    ) sqlinfo,    TABLE ( dbms_xplan.display_cursor(sqlinfo.sql_id, sqlinfo.child_number, &#x27;ALLSTATS LAST&#x27;) ) xplan/\n","plink":"https://marshmallowl.github.io/2020/12/10/SQL执行计划/"},{"title":"hexo 基础模板","date":"2020-11-23T15:08:09.360Z","date_formatted":{"ll":"Nov 23, 2020","L":"11/23/2020","MM-DD":"11-23"},"updated":"2021-01-06T13:29:22.941Z","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server\n1$ hexo server\nMore info: Server\nGenerate static files\n1$ hexo generate\nMore info: Generating\nDeploy to remote sites\n1$ hexo deploy\nMore info: Deployment\n","plink":"https://marshmallowl.github.io/2020/11/23/hello/"},{"title":"about","date":"2020-11-24T14:23:40.000Z","date_formatted":{"ll":"Nov 24, 2020","L":"11/24/2020","MM-DD":"11-24"},"updated":"2020-11-27T12:37:07.053Z","content":"记录生活，记录成长~\n","plink":"https://marshmallowl.github.io/about/"}]